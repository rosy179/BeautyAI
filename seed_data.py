# #!/usr/bin/env python3
# """
# Script to populate database with sample Vietnamese beauty products and content
# Run this after setting up the database to have demo data
# """

# from app import app, db
# from models import User, Category, Product, BlogPost
# from werkzeug.security import generate_password_hash
# import logging

# def create_sample_data():
#     """Create sample data for the beauty app"""
    
#     with app.app_context():
#         # Create admin user
#         admin = User(
#             username='admin',
#             email='admin@beautyapp.com',
#             full_name='Qu·∫£n tr·ªã vi√™n',
#             is_admin=True
#         )
#         admin.set_password('admin123')
        
#         # Create sample user
#         user = User(
#             username='nguyenmai',
#             email='mai@example.com',
#             full_name='Nguy·ªÖn Mai',
#             phone='0901234567'
#         )
#         user.set_password('password123')
        
#         db.session.add(admin)
#         db.session.add(user)
#         db.session.commit()
        
#         # Create categories
#         categories = [
#             Category(name='S·ªØa r·ª≠a m·∫∑t', description='S·∫£n ph·∫©m l√†m s·∫°ch da m·∫∑t'),
#             Category(name='Kem d∆∞·ª°ng ·∫©m', description='S·∫£n ph·∫©m d∆∞·ª°ng ·∫©m cho da'),
#             Category(name='Serum', description='Tinh ch·∫•t d∆∞·ª°ng da chuy√™n s√¢u'),
#             Category(name='Kem ch·ªëng n·∫Øng', description='S·∫£n ph·∫©m b·∫£o v·ªá da kh·ªèi tia UV'),
#             Category(name='M·∫∑t n·∫°', description='M·∫∑t n·∫° d∆∞·ª°ng da'),
#             Category(name='T·∫©y trang', description='S·∫£n ph·∫©m t·∫©y trang makeup'),
#         ]
        
#         for cat in categories:
#             db.session.add(cat)
#         db.session.commit()
        
#         # Create sample products
#         products = [
#             # S·ªØa r·ª≠a m·∫∑t
#             Product(
#                 name='S·ªØa r·ª≠a m·∫∑t CeraVe Foaming Facial Cleanser',
#                 description='S·ªØa r·ª≠a m·∫∑t t·∫°o b·ªçt d√†nh cho da th∆∞·ªùng ƒë·∫øn da d·∫ßu, ch·ª©a 3 Ceramides thi·∫øt y·∫øu v√† Hyaluronic Acid.',
#                 price=320000,
#                 category_id=1,
#                 brand='CeraVe',
#                 skin_type='oily',
#                 ingredients='Ceramides, Hyaluronic Acid, Niacinamide',
#                 stock_quantity=50,
#                 image_url='https://images.unsplash.com/photo-1556228720-195a672e8a03?w=400'
#             ),
#             Product(
#                 name='S·ªØa r·ª≠a m·∫∑t La Roche-Posay Toleriane Caring Wash',
#                 description='S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π d√†nh cho da nh·∫°y c·∫£m, kh√¥ng ch·ª©a x√† ph√≤ng.',
#                 price=385000,
#                 category_id=1,
#                 brand='La Roche-Posay',
#                 skin_type='sensitive',
#                 ingredients='Thermal Spring Water, Glycerin',
#                 stock_quantity=30,
#                 image_url='https://images.unsplash.com/photo-1570554886111-e80fcca6a029?w=400'
#             ),
            
#             # Kem d∆∞·ª°ng ·∫©m
#             Product(
#                 name='Kem d∆∞·ª°ng ·∫©m Neutrogena Hydro Boost',
#                 description='Kem d∆∞·ª°ng ·∫©m ch·ª©a Hyaluronic Acid cung c·∫•p ƒë·ªô ·∫©m su·ªët 72 gi·ªù.',
#                 price=425000,
#                 category_id=2,
#                 brand='Neutrogena',
#                 skin_type='all',
#                 ingredients='Hyaluronic Acid, Glycerin, Dimethicone',
#                 stock_quantity=40,
#                 image_url='https://images.unsplash.com/photo-1620916566398-39f1143ab7be?w=400'
#             ),
#             Product(
#                 name='Kem d∆∞·ª°ng ·∫©m Clinique Dramatically Different Moisturizing Gel',
#                 description='Gel d∆∞·ª°ng ·∫©m nh·∫π t√™nh d√†nh cho da d·∫ßu v√† da h·ªón h·ª£p.',
#                 price=890000,
#                 category_id=2,
#                 brand='Clinique',
#                 skin_type='combination',
#                 ingredients='Urea, Glycerin, Cucumber Extract',
#                 stock_quantity=25,
#                 image_url='https://images.unsplash.com/photo-1612817288484-6f916006741a?w=400'
#             ),
            
#             # Serum
#             Product(
#                 name='Serum The Ordinary Niacinamide 10% + Zinc 1%',
#                 description='Serum ki·ªÉm so√°t d·∫ßu v√† thu nh·ªè l·ªó ch√¢n l√¥ng v·ªõi 10% Niacinamide.',
#                 price=220000,
#                 category_id=3,
#                 brand='The Ordinary',
#                 skin_type='oily',
#                 ingredients='Niacinamide, Zinc PCA',
#                 stock_quantity=60,
#                 image_url='https://images.unsplash.com/photo-1631729371254-42c2892f0e10?w=400'
#             ),
#             Product(
#                 name='Serum Paula\'s Choice 2% BHA Liquid Exfoliant',
#                 description='Dung d·ªãch t·∫©y t·∫ø b√†o ch·∫øt v·ªõi 2% BHA (Salicylic Acid) gi√∫p l√†m s·∫°ch l·ªó ch√¢n l√¥ng.',
#                 price=750000,
#                 category_id=3,
#                 brand='Paula\'s Choice',
#                 skin_type='oily',
#                 ingredients='Salicylic Acid, Green Tea Extract',
#                 stock_quantity=35,
#                 image_url='https://images.unsplash.com/photo-1608248543803-ba4f8c70ae0b?w=400'
#             ),
            
#             # Kem ch·ªëng n·∫Øng
#             Product(
#                 name='Kem ch·ªëng n·∫Øng La Roche-Posay Anthelios Ultra Cover SPF 60',
#                 description='Kem ch·ªëng n·∫Øng ph·ªï r·ªông SPF 60 ch·ªëng th·∫•m n∆∞·ªõc, d√†nh cho da nh·∫°y c·∫£m.',
#                 price=520000,
#                 category_id=4,
#                 brand='La Roche-Posay',
#                 skin_type='all',
#                 ingredients='Titanium Dioxide, Zinc Oxide, Anthelios XL',
#                 stock_quantity=45,
#                 image_url='https://images.unsplash.com/photo-1556228720-195a672e8a03?w=400'
#             ),
            
#             # M·∫∑t n·∫°
#             Product(
#                 name='M·∫∑t n·∫° Some By Mi Bye Bye Blackhead Green Tea Tox Bubble Cleanser',
#                 description='M·∫∑t n·∫° t·∫°o b·ªçt tr√† xanh gi√∫p l√†m s·∫°ch m·ª•n ƒë·∫ßu ƒëen v√† ki·ªÉm so√°t d·∫ßu.',
#                 price=350000,
#                 category_id=5,
#                 brand='Some By Mi',
#                 skin_type='oily',
#                 ingredients='Green Tea Extract, BHA, Charcoal Powder',
#                 stock_quantity=20,
#                 image_url='https://images.unsplash.com/photo-1596755389378-c31d21fd1273?w=400'
#             ),
#         ]
        
#         for product in products:
#             db.session.add(product)
#         db.session.commit()
        
#         # Create sample blog posts
#         blog_posts = [
#             BlogPost(
#                 title='10 B∆∞·ªõc Skincare Routine C∆° B·∫£n Cho Ng∆∞·ªùi M·ªõi B·∫Øt ƒê·∫ßu',
#                 content='''
# Skincare routine c∆° b·∫£n l√† n·ªÅn t·∫£ng quan tr·ªçng ƒë·ªÉ c√≥ l√†n da kh·ªèe m·∫°nh. D∆∞·ªõi ƒë√¢y l√† 10 b∆∞·ªõc c∆° b·∫£n b·∫°n n√™n bi·∫øt:

# 1. **T·∫©y trang**: Lo·∫°i b·ªè makeup v√† √¥ nhi·ªÖm
# 2. **S·ªØa r·ª≠a m·∫∑t**: L√†m s·∫°ch s√¢u da m·∫∑t
# 3. **Toner**: C√¢n b·∫±ng ƒë·ªô pH cho da
# 4. **Essence**: Cung c·∫•p ƒë·ªô ·∫©m c∆° b·∫£n
# 5. **Serum**: ƒêi·ªÅu tr·ªã c√°c v·∫•n ƒë·ªÅ c·ª• th·ªÉ
# 6. **Kem m·∫Øt**: ChƒÉm s√≥c v√πng da m·∫Øt
# 7. **Kem d∆∞·ª°ng ·∫©m**: Kh√≥a ·∫©m cho da
# 8. **Kem ch·ªëng n·∫Øng** (bu·ªïi s√°ng)
# 9. **M·∫∑t n·∫°** (2-3 l·∫ßn/tu·∫ßn)
# 10. **D·∫ßu d∆∞·ª°ng** (bu·ªïi t·ªëi)

# H√£y b·∫Øt ƒë·∫ßu t·ª´ t·ª´ v√† l·∫Øng nghe da c·ªßa b·∫°n!
#                 ''',
#                 excerpt='H∆∞·ªõng d·∫´n chi ti·∫øt 10 b∆∞·ªõc skincare routine c∆° b·∫£n d√†nh cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu, gi√∫p b·∫°n c√≥ l√†n da kh·ªèe m·∫°nh.',
#                 author_id=1,
#                 is_published=True,
#                 tags='skincare,routine,newbie',
#                 featured_image='https://images.unsplash.com/photo-1596755389378-c31d21fd1273?w=800'
#             ),
#             BlogPost(
#                 title='C√°ch Ch·ªçn Kem Ch·ªëng N·∫Øng Ph√π H·ª£p V·ªõi T·ª´ng Lo·∫°i Da',
#                 content='''
# Kem ch·ªëng n·∫Øng l√† b∆∞·ªõc kh√¥ng th·ªÉ thi·∫øu trong routine h√†ng ng√†y. Vi·ªác ch·ªçn ƒë√∫ng lo·∫°i kem ch·ªëng n·∫Øng s·∫Ω gi√∫p b·∫£o v·ªá da hi·ªáu qu·∫£:

# **Da d·∫ßu**: Ch·ªçn lo·∫°i gel, kh√¥ng d·∫ßu, c√≥ th√†nh ph·∫ßn ki·ªÉm so√°t d·∫ßu
# **Da kh√¥**: Ch·ªçn lo·∫°i cream d∆∞·ª°ng ·∫©m, ch·ª©a hyaluronic acid
# **Da nh·∫°y c·∫£m**: Ch·ªçn lo·∫°i mineral (zinc oxide, titanium dioxide)
# **Da h·ªón h·ª£p**: Ch·ªçn lo·∫°i hybrid, v·ª´a d∆∞·ª°ng ·∫©m v·ª´a ki·ªÉm so√°t d·∫ßu

# Lu√¥n ch·ªçn SPF 30+ v√† PA+++ tr·ªü l√™n ƒë·ªÉ b·∫£o v·ªá t·ªëi ∆∞u.
#                 ''',
#                 excerpt='H∆∞·ªõng d·∫´n ch·ªçn kem ch·ªëng n·∫Øng ph√π h·ª£p v·ªõi t·ª´ng lo·∫°i da ƒë·ªÉ b·∫£o v·ªá da hi·ªáu qu·∫£ nh·∫•t.',
#                 author_id=1,
#                 is_published=True,
#                 tags='sunscreen,protection,skintype',
#                 featured_image='https://images.unsplash.com/photo-1556228720-195a672e8a03?w=800'
#             ),
#         ]
        
#         for post in blog_posts:
#             db.session.add(post)
#         db.session.commit()
        
#         print("‚úÖ D·ªØ li·ªáu m·∫´u ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!")
#         print("üë§ Admin: admin@beautyapp.com / admin123")
#         print("üë§ User: mai@example.com / password123")

# if __name__ == '__main__':
#     create_sample_data()
#!/usr/bin/env python3
"""
Script to populate database with sample Vietnamese beauty products and content
Run this after setting up the database to have demo data
"""

import logging
from app import create_app
from extensions import db  # Nh·∫≠p db t·ª´ extensions.py
from werkzeug.security import generate_password_hash

app = create_app()
# Configure logging
logging.basicConfig(level=logging.INFO)

def create_sample_data():
    """Create sample data for the beauty app"""
    from models import User, Category, Product, BlogPost  # Nh·∫≠p m√¥ h√¨nh trong h√†m
    
    with app.app_context():
        logging.info("B·∫Øt ƒë·∫ßu t·∫°o d·ªØ li·ªáu m·∫´u...")
        
        try:
            # Create admin user
            if not User.query.filter_by(email='admin@beautyapp.com').first():
                admin = User(
                    username='admin',
                    email='admin@beautyapp.com',
                    full_name='Qu·∫£n tr·ªã vi√™n',
                    is_admin=True
                )
                admin.set_password('admin123')
                db.session.add(admin)
                logging.info("Ng∆∞·ªùi d√πng admin ƒë√£ ƒë∆∞·ª£c t·∫°o.")
            
            # Create sample user
            if not User.query.filter_by(email='mai@example.com').first():
                user = User(
                    username='nguyenmai',
                    email='mai@example.com',
                    full_name='Nguy·ªÖn Mai',
                    phone='0901234567'
                )
                user.set_password('password123')
                db.session.add(user)
                logging.info("Ng∆∞·ªùi d√πng nguyenmai ƒë√£ ƒë∆∞·ª£c t·∫°o.")
            
            db.session.commit()
            
            # Create categories
            category_names = [
                'S·ªØa r·ª≠a m·∫∑t', 'Kem d∆∞·ª°ng ·∫©m', 'Serum', 
                'Kem ch·ªëng n·∫Øng', 'M·∫∑t n·∫°', 'T·∫©y trang'
            ]
            for name in category_names:
                if not Category.query.filter_by(name=name).first():
                    category = Category(
                        name=name,
                        description=f'S·∫£n ph·∫©m {name.lower()} cho da'
                    )
                    db.session.add(category)
            db.session.commit()
            logging.info("C√°c danh m·ª•c ƒë√£ ƒë∆∞·ª£c t·∫°o.")
            
            # Create sample products
            products = [
                # S·ªØa r·ª≠a m·∫∑t
                {
                    'name': 'S·ªØa r·ª≠a m·∫∑t CeraVe Foaming Facial Cleanser',
                    'description': 'S·ªØa r·ª≠a m·∫∑t t·∫°o b·ªçt d√†nh cho da th∆∞·ªùng ƒë·∫øn da d·∫ßu, ch·ª©a 3 Ceramides thi·∫øt y·∫øu v√† Hyaluronic Acid.',
                    'price': 320000,
                    'category_name': 'S·ªØa r·ª≠a m·∫∑t',
                    'brand': 'CeraVe',
                    'skin_type': 'oily',
                    'ingredients': 'Ceramides, Hyaluronic Acid, Niacinamide',
                    'stock_quantity': 50,
                    'image_url': 'https://images.unsplash.com/photo-1556228720-195a672e8a03?w=400'
                },
                # ... (c√°c s·∫£n ph·∫©m kh√°c t∆∞∆°ng t·ª±, r√∫t g·ªçn cho ng·∫Øn g·ªçn)
            ]
            
            for p in products:
                category = Category.query.filter_by(name=p['category_name']).first()
                if category and not Product.query.filter_by(name=p['name']).first():
                    product = Product(
                        name=p['name'],
                        description=p['description'],
                        price=p['price'],
                        category_id=category.id,
                        brand=p['brand'],
                        skin_type=p['skin_type'],
                        ingredients=p['ingredients'],
                        stock_quantity=p['stock_quantity'],
                        image_url=p['image_url']
                    )
                    db.session.add(product)
            db.session.commit()
            logging.info("C√°c s·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c t·∫°o.")
            
            # Create sample blog posts
            admin = User.query.filter_by(email='admin@beautyapp.com').first()
            if admin:
                blog_posts = [
                    {
                        'title': '10 B∆∞·ªõc Skincare Routine C∆° B·∫£n Cho Ng∆∞·ªùi M·ªõi B·∫Øt ƒê·∫ßu',
                        'content': '...',  # Gi·ªØ nguy√™n n·ªôi dung t·ª´ m√£ g·ªëc
                        'excerpt': 'H∆∞·ªõng d·∫´n chi ti·∫øt 10 b∆∞·ªõc skincare routine c∆° b·∫£n d√†nh cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu, gi√∫p b·∫°n c√≥ l√†n da kh·ªèe m·∫°nh.',
                        'author_id': admin.id,
                        'is_published': True,
                        'tags': 'skincare,routine,newbie',
                        'featured_image': 'https://images.unsplash.com/photo-1596755389378-c31d21fd1273?w=800'
                    },
                    # ... (c√°c b√†i vi·∫øt kh√°c t∆∞∆°ng t·ª±)
                ]
                
                for post in blog_posts:
                    if not BlogPost.query.filter_by(title=post['title']).first():
                        blog_post = BlogPost(**post)
                        db.session.add(blog_post)
                db.session.commit()
                logging.info("C√°c b√†i vi·∫øt blog ƒë√£ ƒë∆∞·ª£c t·∫°o.")
            
            print("‚úÖ D·ªØ li·ªáu m·∫´u ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!")
            print("üë§ Admin: admin@beautyapp.com / admin123")
            print("üë§ User: mai@example.com / password123")
            
        except Exception as e:
            db.session.rollback()
            logging.error(f"L·ªói khi t·∫°o d·ªØ li·ªáu m·∫´u: {e}")
            raise

if __name__ == '__main__':
    create_sample_data()